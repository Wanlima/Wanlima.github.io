(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{367:function(e,a,c){"use strict";c.r(a);var _=c(44),t=Object(_.a)({},(function(){var e=this,a=e.$createElement,c=e._self._c||a;return c("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[c("h1",{attrs:{id:"clang"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clang"}},[e._v("#")]),e._v(" Clang")]),e._v(" "),c("p",[c("code",[e._v("Clang")]),e._v(" 和 "),c("code",[e._v("GCC")]),e._v(" 都是编译器。由于 "),c("code",[e._v("GNU")]),e._v(" 编译器套装（GCC）系统庞大，而且 "),c("code",[e._v("Apple")]),e._v(" 大量使用的 "),c("code",[e._v("OC")]),e._v(" 在 "),c("code",[e._v("GCC")]),e._v(" 中优先级较低，同时 "),c("code",[e._v("GCC")]),e._v(" 作为一 个纯粹的编译系统，与IDE配合并不优秀。因此，"),c("code",[e._v("Apple")]),e._v(" 公司开发了用以替代 "),c("code",[e._v("GCC")]),e._v(" 的 "),c("code",[e._v("Clang")]),e._v("。"),c("code",[e._v("Clang")]),e._v(" 是一个 "),c("code",[e._v("C")]),e._v("、"),c("code",[e._v("C++")]),e._v("、"),c("code",[e._v("OC")]),e._v(" 语言的轻量级编译器，它是由 "),c("code",[e._v("C++")]),e._v(" 编写，基于 "),c("code",[e._v("LLVM")]),e._v("，发布于 "),c("code",[e._v("LLVM BSD")]),e._v(" 许可证下的编译器。"),c("code",[e._v("Clang")]),e._v(" "),c("strong",[e._v("编译速度更快，编译产出更小、出错提示更友好")]),e._v("。")]),e._v(" "),c("p",[c("code",[e._v("Low Level Virtual Machine（LLVM）")]),e._v(" 是一个开源的编译器架构，"),c("code",[e._v("Clang")]),e._v(" 是 "),c("code",[e._v("LLVM")]),e._v(" 的一个编译器前端。由于优秀的设计，使得 "),c("code",[e._v("Clang")]),e._v(" 非常适合用于开发源代码级别的分析工具。"),c("code",[e._v("Clang")]),e._v(" 对源程序进行语法分析和语义分析，并将分析结果转换为 "),c("code",[e._v("Abstract Syntax Tree")]),e._v("(抽象语法树)，最后使用 "),c("code",[e._v("LLVM")]),e._v(" 作为后端代码的生成器。")]),e._v(" "),c("h3",{attrs:{id:"clang-指令"}},[c("a",{staticClass:"header-anchor",attrs:{href:"#clang-指令"}},[e._v("#")]),e._v(" Clang 指令")]),e._v(" "),c("p",[e._v("输入 以下指令输出可执行文件")]),e._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[e._v("clang -fobjc-arc -framework Foundation hello.m -o nihau\n")])])]),c("p",[e._v("或者 重新生成 C++ 文件")]),e._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[e._v("$xcrun -sdk iphoneos clang -arch arm64 -framework UIKit -rewrite-objc main.m -o main.cpp\n")])])]),c("ul",[c("li",[e._v("-sdk iphoneos 指定平台，也可以是模拟器"),c("code",[e._v("iphonesimulator")])]),e._v(" "),c("li",[e._v("-arch arm64 指定"),c("code",[e._v("CPU")]),e._v("架构")]),e._v(" "),c("li",[e._v("-framework UIKit 指定引用的框架")])]),e._v(" "),c("div",{staticClass:"custom-block warning"},[c("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),c("p",[e._v("clang编译弱引用"),c("code",[e._v("__weak")]),e._v("失败")])]),e._v(" "),c("div",{staticClass:"language-oc extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[e._v("NSObject *obj = [[NSObject alloc] init];\n__weak NSObject *weakObj = obj;\n")])])]),c("blockquote",[c("p",[e._v("error: cannot create __weak reference because the current deployment target does not support weak references "),c("strong",[e._v("attribute")]),e._v("((objc_ownership(weak))) NSObject *weakObj = obj;")])]),e._v(" "),c("p",[c("code",[e._v("__weak")]),e._v(" 需要运行时环境的支持，添加 "),c("code",[e._v("-fobjc-arc")]),e._v(" 和 "),c("code",[e._v("-fobjc-runtime=ios-9.0.0")]),e._v(" 两个参数即可：")]),e._v(" "),c("div",{staticClass:"language- extra-class"},[c("pre",{pre:!0,attrs:{class:"language-text"}},[c("code",[e._v("$ xcrun -sdk iphoneos clang -arch arm64 -framework UIKit -rewrite-objc -fobjc-arc -fobjc-runtime=ios-9.0.0 main.m -o main.cpp\n")])])])])}),[],!1,null,null,null);a.default=t.exports}}]);